package parse.txt.split;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

// –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è - —à–∞–±–ª–æ–Ω—ã –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —è–∑—ã–∫–µ
// –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ª–∏–±–æ –ø–æ–∏—Å–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π.
// –®–∞–±–ª–æ–Ω —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.

// –ü—Ä–∞–≤–∏–ª–∞:

// 1) –õ—é–±–æ–π —Å–∏–º–≤–æ–ª –≤ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–∞–º —Å–µ–±—è –∑–∞
// –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —à–∞–±–ª–æ–Ω–∞.
// "hello" -> "hello" (+); "hello world" (+); "world template" (-);

// 2) `^` - –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏.
// "^hello" -> "hello world" (+); "world hello" (-);

// 3) `$` - –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏.
// "hello$" -> "world hello" (+); "hello world" (-);
// "^hello$" -> "hello" (+); "hello world" (-); "hello world hello" (-);

// 4) `.` - –ª—é–±–æ–π —Å–∏–º–≤–æ–ª.
// "^a.c$" -> "abc" (+); "azc" (+); "a7c" (+); "a_c" (+); "a_b" (-);

// 5) `\s` - –ø—Ä–æ–±–µ–ª.
// "^a\sc$" -> "a c" (+); "a_c" (-);

// 6) `\d` - —Ü–∏—Ñ—Ä–∞ –æ—Ç 0 –¥–æ 9.
// "^a\dc$" -> "a3c" (+); "a7c" (+); "abc" (-); "a#c" (-);

// 7) `\w` - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –ª–∏–±–æ —Ü–∏—Ñ—Ä–∞ –æ—Ç 0 –¥–æ 9
// –ª–∏–±–æ —Å–∏–º–≤–æ–ª –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è.
// "^a\wc$" -> "abc" (+); "aZc" (+); "a7c" (+); "a_c" (+); "a#c" (-);

// üòç `[]` - –≥—Ä—É–ø–ø–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–µ—Ç —Å–æ–≤–ø–∞—Å—Ç—å –ª—é–±–æ–π.
// "[zxv]" - —Å–∏–º–≤–æ–ª z –ª–∏–±–æ x –ª–∏–±–æ v.
// "[a-z]" - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
// "[A-Z]" - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
// "[a-zA-Z]" - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –ª—é–±–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
// "[–∞-—è—ë]" - –ª—é–±–æ–π –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
// "[a-zA-Z–∞-—è—ë–ê-–Ø–Å]" - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π –ª–∏–±–æ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –ª—é–±–æ–º
// —Ä–µ–≥–∏—Å—Ç—Ä–µ.
// "[3-7]" - —Ü–∏—Ñ—Ä–∞ –æ—Ç 3 –¥–æ 7 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
// "[a-z_3-5.#]" - –ª—é–±–æ–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –ª–∏–±–æ —Å–∏–º–≤–æ–ª
// –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –ª–∏–±–æ —Ü–∏—Ñ—Ä–∞ –æ—Ç 3 –¥–æ 5 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ª–∏–±–æ —Ç–æ—á–∫–∞, –ª–∏–±–æ
// —Ä–µ—à–µ—Ç–∫–∞.
// 9) `()` - –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª –≤ –æ–¥–Ω–æ.

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ —à–∞–±–ª–æ–Ω–µ
// —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω–Ω–æ —Ä–∞–∑ –¥–æ–ª–∂–Ω–æ
// –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ. –õ—é–±–æ–µ –ø—Ä–∞–≤–∏–ª–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è
// —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑. –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ —Ç–æ–º—É –ø—Ä–∞–≤–∏–ª—É
// –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω.
// `<–ø—Ä–∞–≤–∏–ª–æ 1><–ø—Ä–∞–≤–∏–ª–æ 2><–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä>` - –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –ø—Ä–∞–≤–∏–ª—É 2, –ø—Ä–∏ —ç—Ç–æ–º
// –ø—Ä–∞–≤–∏–ª–æ 1 –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã:

// 1) `?` - 0 –ª–∏–±–æ 1 —Ä–∞–∑.
// "^c\d?$" -> "c" (+); "c7" (+); "c777" (-); "c77777" (-); "c7777777" (-);

// 2) `*` - –æ—Ç 0 –∏ –±–æ–ª–µ–µ —Ä–∞–∑.
// "^c\d*$" -> "c" (+); "c7" (+); "c777" (+); "c77777" (+); "c7777777" (+);

// 3) `+` - –æ—Ç 1 –∏ –±–æ–ª–µ–µ —Ä–∞–∑.
// "^c\d+$" -> "c" (-); "c7" (+); "c777" (+); "c77777" (+); "c7777777" (+);

// 4) `{n}` - n —Ä–∞–∑.
// "^c\d{3}$" -> "c" (-); "c7" (-); "c777" (+); "c77777" (-); "c7777777" (-);

// 5) `{n,}` - –æ—Ç n –∏ –±–æ–ª–µ–µ —Ä–∞–∑.
// "^c\d{3,}$" -> "c" (-); "c7" (-); "c777" (+); "c77777" (+); "c7777777" (+);

// 6) `{n1,n2}` - –æ—Ç n1 –¥–æ n2 —Ä–∞–∑ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
// "^c\d{3,5}$" -> "c" (-); "c7" (-); "c777" (+); "c77777" (+); "c7777777" (-);

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º - –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º
// —Å–∏–º–≤–æ–ª —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–±—ã—á–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º.

// `.` (–ª—é–±–æ–π —Å–∏–º–≤–æ–ª);
// `\.` (—Ç–æ—á–∫–∞);
// `+` (–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä);
// `\+` (–ø–ª—é—Å);

// `*.matches(String regex) : boolean` - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è
// —Å—Ç—Ä–æ–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è regex.

public class ObjectListFromFile {
    private final String fileWithData = "C:\\Users\\Amirzhan\\Documents\\forPracticant\\text_for_parse.txt";
    private final String updatedFileWithData = "C:\\Users\\Amirzhan\\Documents\\forPracticant\\updated_text_for_parse.txt";
    public String[] splitFile() throws IOException {

        FileReader input = new FileReader(fileWithData);
        StringBuilder stringBuilder = new StringBuilder();
        int counter = 0;
        try (BufferedReader reader = new BufferedReader(input)){
            String line = null;
            while ((line = reader.readLine()) != null){
                stringBuilder.append(line);
            }
        }
        System.out.println(stringBuilder);
//        String[] strs = stringBuilder.toString().split(",");
//        int counter = 0;
//        int countOfStrs = 0;
//        int numberOfStrs = strs.length / 8;
//        String[] words = new String[numberOfStrs];
//        String newStr = null;
//        for (String str : strs) {
//            counter++;
//            if (newStr == null){
//                newStr = str;
//            } else {
//                newStr = newStr + str;
//            }
//            if (counter == 8){
//                words[countOfStrs] = newStr;
//                countOfStrs++;
//                newStr = null;
//                counter = 0;
//            }
//        }

        String str = stringBuilder.toString();
        int strLength = str.length();
        String newStr = str.substring(10, strLength);
        //str = str.substring(2, strLength - 1);
        System.out.println(newStr);
        return null;
    }
}
